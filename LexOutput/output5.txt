Lexeme : int ; Token :[INT]; Line no. 1
Lexeme : fun ; Token :[FUN]; Line no. 1
Lexeme : sum ; Token :[IDENTIFIER]; Line no. 1
Lexeme : ( ; Token :[OP_PAR]; Line no. 1
Lexeme : int ; Token :[INT]; Line no. 1
Lexeme : a ; Token :[IDENTIFIER]; Line no. 1
Lexeme : , ; Token :[COM]; Line no. 1
Lexeme : int ; Token :[INT]; Line no. 1
Lexeme : b ; Token :[IDENTIFIER]; Line no. 1
Lexeme : ) ; Token :[CL_PAR]; Line no. 1
Lexeme : : ; Token :[COL]; Line no. 1
Lexeme : int ; Token :[INT]; Line no. 2
Lexeme : c ; Token :[IDENTIFIER]; Line no. 2
Lexeme : : ; Token :[COL]; Line no. 2
Lexeme : c ; Token :[IDENTIFIER]; Line no. 3
Lexeme : = ; Token :[ASSIGN_OP]; Line no. 3
Lexeme : a ; Token :[IDENTIFIER]; Line no. 3
Lexeme : + ; Token :[ADDITION_OP]; Line no. 3
Lexeme : b ; Token :[IDENTIFIER]; Line no. 3
Lexeme : ) ; Token :[CL_PAR]; Line no. 3
Lexeme : : ; Token :[COL]; Line no. 3
Lexeme : print ; Token :[PRINT]; Line no. 4
Lexeme : ( ; Token :[OP_PAR]; Line no. 4
Lexeme : c ; Token :[IDENTIFIER]; Line no. 4
Lexeme : ) ; Token :[CL_PAR]; Line no. 4
Lexeme : : ; Token :[COL]; Line no. 4
Lexeme : endfun ; Token :[ENDFUN]; Line no. 5
Lexeme : : ; Token :[COL]; Line no. 5
Lexeme : fun ; Token :[FUN]; Line no. 6
Lexeme : main ; Token :[IDENTIFIER]; Line no. 6
Lexeme : ( ; Token :[OP_PAR]; Line no. 6
Lexeme : ) ; Token :[CL_PAR]; Line no. 6
Lexeme : : ; Token :[COL]; Line no. 6
Lexeme : int ; Token :[INT]; Line no. 7
Lexeme : a ; Token :[IDENTIFIER]; Line no. 7
Lexeme : : ; Token :[COL]; Line no. 7
Lexeme : int ; Token :[INT]; Line no. 8
Lexeme : b ; Token :[IDENTIFIER]; Line no. 8
Lexeme : : ; Token :[COL]; Line no. 8
Lexeme : scan ; Token :[SCAN]; Line no. 9
Lexeme : ( ; Token :[OP_PAR]; Line no. 9
Lexeme : a ; Token :[IDENTIFIER]; Line no. 9
Lexeme : ) ; Token :[CL_PAR]; Line no. 9
Lexeme : : ; Token :[COL]; Line no. 9
Lexeme : b ; Token :[IDENTIFIER]; Line no. 10
Lexeme : = ; Token :[ASSIGN_OP]; Line no. 10
Lexeme : scan ; Token :[SCAN]; Line no. 10
Lexeme : ( ; Token :[OP_PAR]; Line no. 10
Lexeme : b ; Token :[IDENTIFIER]; Line no. 10
Lexeme : ) ; Token :[CL_PAR]; Line no. 10
Lexeme : : ; Token :[COL]; Line no. 10
Lexeme : b ; Token :[IDENTIFIER]; Line no. 11
Lexeme : = ; Token :[ASSIGN_OP]; Line no. 11
Lexeme : 0 ; Token :[INT_LIT]; Line no. 11
Lexeme : : ; Token :[COL]; Line no. 11
Lexeme : fun ; Token :[FUN]; Line no. 12
Lexeme : sum ; Token :[IDENTIFIER]; Line no. 12
Lexeme : ( ; Token :[OP_PAR]; Line no. 12
Lexeme : a ; Token :[IDENTIFIER]; Line no. 12
Lexeme : , ; Token :[COM]; Line no. 12
Lexeme : b ; Token :[IDENTIFIER]; Line no. 12
Lexeme : ) ; Token :[CL_PAR]; Line no. 12
Lexeme : : ; Token :[COL]; Line no. 12
Lexeme : ret ; Token :[RET]; Line no. 13
Lexeme : 0 ; Token :[INT_LIT]; Line no. 13
Lexeme : : ; Token :[COL]; Line no. 13
Lexeme : endfun ; Token :[ENDFUN]; Line no. 14
Lexeme : : ; Token :[COL]; Line no. 14
