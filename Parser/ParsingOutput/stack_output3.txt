Stack : <START_PROGRAM>$
Production rule is : <START_PROGRAM>=<FUNCTION_LIST><MAIN>
Stack after production rule : <FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <FUNCTION_LIST><MAIN>$
Production rule is : <FUNCTION_LIST>=<FUNCTION><FUNCTION_LIST>
Stack after production rule : <FUNCTION><FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <FUNCTION><FUNCTION_LIST><MAIN>$
Production rule is : <FUNCTION>=<DATATYPE>[FUN][IDENTIFIER][OP_PAR]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]
Stack after production rule : <DATATYPE>[FUN][IDENTIFIER][OP_PAR]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <DATATYPE>[FUN][IDENTIFIER][OP_PAR]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <DATATYPE>=[INT]
Stack after production rule : [INT][FUN][IDENTIFIER][OP_PAR]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Matched [INT]

Matched [FUN]

Matched [IDENTIFIER]

Matched [OP_PAR]

Stack : <PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <PARAM_LIST>=<PARAM><PARAM_LIST>
Stack after production rule : <PARAM><PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <PARAM><PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <PARAM>=<DATATYPE>[IDENTIFIER]
Stack after production rule : <DATATYPE>[IDENTIFIER]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <DATATYPE>[IDENTIFIER]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <DATATYPE>=[INT]
Stack after production rule : [INT][IDENTIFIER]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Matched [INT]

Matched [IDENTIFIER]

Stack : <PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <PARAM_LIST>=[COM]<PARAM><PARAM_LIST>
Stack after production rule : [COM]<PARAM><PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [COM]

Matched [COM]

Stack : <PARAM><PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <PARAM>=<DATATYPE>[IDENTIFIER]
Stack after production rule : <DATATYPE>[IDENTIFIER]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <DATATYPE>[IDENTIFIER]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <DATATYPE>=[INT]
Stack after production rule : [INT][IDENTIFIER]<PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Matched [INT]

Matched [IDENTIFIER]

Stack : <PARAM_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <PARAM_LIST>=#
Stack after production rule : [CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [CL_PAR]

Matched [CL_PAR]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <STMT>=<DECL>[COL]
Stack after production rule : <DECL>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <DECL>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <DECL>=<DATATYPE>[IDENTIFIER]
Stack after production rule : <DATATYPE>[IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Stack : <DATATYPE>[IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <DATATYPE>=[INT]
Stack after production rule : [INT][IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [INT]

Matched [INT]

Matched [IDENTIFIER]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <STMT>=<ASSIGNMENT>[COL]
Stack after production rule : <ASSIGNMENT>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Stack : <ASSIGNMENT>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <ASSIGNMENT>=[IDENTIFIER][ASSIGN_OP]<EXPRESSIONS>
Stack after production rule : [IDENTIFIER][ASSIGN_OP]<EXPRESSIONS>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Matched [IDENTIFIER]

Matched [ASSIGN_OP]

Stack : <EXPRESSIONS>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <EXPRESSIONS>=<TERM><EXPRESSIONS*>
Stack after production rule : <TERM><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Stack : <TERM><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <TERM>=<FACTOR><TERM*>
Stack after production rule : <FACTOR><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Stack : <FACTOR><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <FACTOR>=[IDENTIFIER]
Stack after production rule : [IDENTIFIER]<TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Matched [IDENTIFIER]

Stack : <TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <TERM*>=#
Stack after production rule : <EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [ADDITION_OP]

Stack : <EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <EXPRESSIONS*>=[ADDITION_OP]<TERM><EXPRESSIONS*>
Stack after production rule : [ADDITION_OP]<TERM><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [ADDITION_OP]

Matched [ADDITION_OP]

Stack : <TERM><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <TERM>=<FACTOR><TERM*>
Stack after production rule : <FACTOR><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Stack : <FACTOR><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <FACTOR>=[IDENTIFIER]
Stack after production rule : [IDENTIFIER]<TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Matched [IDENTIFIER]

Stack : <TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <TERM*>=#
Stack after production rule : <EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [COL]

Stack : <EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <EXPRESSIONS*>=#
Stack after production rule : [COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [COL]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [PRINT]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <STMT>=<FUNC_CALL>[COL]
Stack after production rule : <FUNC_CALL>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [PRINT]

Stack : <FUNC_CALL>[COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <FUNC_CALL>=[PRINT][OP_PAR]<PRINT_STMT>[CL_PAR]
Stack after production rule : [PRINT][OP_PAR]<PRINT_STMT>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [PRINT]

Matched [PRINT]

Matched [OP_PAR]

Stack : <PRINT_STMT>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <PRINT_STMT>=[IDENTIFIER]
Stack after production rule : [IDENTIFIER][CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [IDENTIFIER]

Matched [IDENTIFIER]

Matched [CL_PAR]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Production rule is : <STMT_LIST>=#
Stack after production rule : [ENDFUN][COL]<FUNCTION_LIST><MAIN>$
Input top is : [ENDFUN]

Matched [ENDFUN]

Matched [COL]

Stack : <FUNCTION_LIST><MAIN>$
Production rule is : <FUNCTION_LIST>=#
Stack after production rule : <MAIN>$
Input top is : [FUN]

Stack : <MAIN>$
Production rule is : <MAIN>=[FUN][IDENTIFIER][OP_PAR][CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]
Stack after production rule : [FUN][IDENTIFIER][OP_PAR][CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [FUN]

Matched [FUN]

Matched [IDENTIFIER]

Matched [OP_PAR]

Matched [CL_PAR]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]$
Input top is : [INT]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT>=<DECL>[COL]
Stack after production rule : <DECL>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT]

Stack : <DECL>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <DECL>=<DATATYPE>[IDENTIFIER]
Stack after production rule : <DATATYPE>[IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT]

Stack : <DATATYPE>[IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <DATATYPE>=[INT]
Stack after production rule : [INT][IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT]

Matched [INT]

Matched [IDENTIFIER]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]$
Input top is : [INT]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT>=<DECL>[COL]
Stack after production rule : <DECL>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT]

Stack : <DECL>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <DECL>=<DATATYPE>[IDENTIFIER]
Stack after production rule : <DATATYPE>[IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT]

Stack : <DATATYPE>[IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <DATATYPE>=[INT]
Stack after production rule : [INT][IDENTIFIER][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT]

Matched [INT]

Matched [IDENTIFIER]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]$
Input top is : [SCAN]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT>=<FUNC_CALL>[COL]
Stack after production rule : <FUNC_CALL>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [SCAN]

Stack : <FUNC_CALL>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <FUNC_CALL>=[SCAN][OP_PAR][IDENTIFIER][CL_PAR]
Stack after production rule : [SCAN][OP_PAR][IDENTIFIER][CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [SCAN]

Matched [SCAN]

Matched [OP_PAR]

Matched [IDENTIFIER]

Matched [CL_PAR]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]$
Input top is : [SCAN]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT>=<FUNC_CALL>[COL]
Stack after production rule : <FUNC_CALL>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [SCAN]

Stack : <FUNC_CALL>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <FUNC_CALL>=[SCAN][OP_PAR][IDENTIFIER][CL_PAR]
Stack after production rule : [SCAN][OP_PAR][IDENTIFIER][CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [SCAN]

Matched [SCAN]

Matched [OP_PAR]

Matched [IDENTIFIER]

Matched [CL_PAR]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]$
Input top is : [IDENTIFIER]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT>=<ASSIGNMENT>[COL]
Stack after production rule : <ASSIGNMENT>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [IDENTIFIER]

Stack : <ASSIGNMENT>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <ASSIGNMENT>=[IDENTIFIER][ASSIGN_OP]<EXPRESSIONS>
Stack after production rule : [IDENTIFIER][ASSIGN_OP]<EXPRESSIONS>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [IDENTIFIER]

Matched [IDENTIFIER]

Matched [ASSIGN_OP]

Stack : <EXPRESSIONS>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <EXPRESSIONS>=<TERM><EXPRESSIONS*>
Stack after production rule : <TERM><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT_LIT]

Stack : <TERM><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <TERM>=<FACTOR><TERM*>
Stack after production rule : <FACTOR><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT_LIT]

Stack : <FACTOR><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <FACTOR>=<VALUE>
Stack after production rule : <VALUE><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT_LIT]

Stack : <VALUE><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <VALUE>=[INT_LIT]
Stack after production rule : [INT_LIT]<TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT_LIT]

Matched [INT_LIT]

Stack : <TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <TERM*>=#
Stack after production rule : <EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [COL]

Stack : <EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <EXPRESSIONS*>=#
Stack after production rule : [COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [COL]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]$
Input top is : [FUN]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT>=<FUNC_CALL>[COL]
Stack after production rule : <FUNC_CALL>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [FUN]

Stack : <FUNC_CALL>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <FUNC_CALL>=[FUN][IDENTIFIER][OP_PAR]<ARG_LIST>[CL_PAR]
Stack after production rule : [FUN][IDENTIFIER][OP_PAR]<ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [FUN]

Matched [FUN]

Matched [IDENTIFIER]

Matched [OP_PAR]

Stack : <ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <ARG_LIST>=<ARG><ARG_LIST>
Stack after production rule : <ARG><ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [IDENTIFIER]

Stack : <ARG><ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <ARG>=[IDENTIFIER]
Stack after production rule : [IDENTIFIER]<ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [IDENTIFIER]

Matched [IDENTIFIER]

Stack : <ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <ARG_LIST>=[COM]<ARG><ARG_LIST>
Stack after production rule : [COM]<ARG><ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [COM]

Matched [COM]

Stack : <ARG><ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <ARG>=[IDENTIFIER]
Stack after production rule : [IDENTIFIER]<ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [IDENTIFIER]

Matched [IDENTIFIER]

Stack : <ARG_LIST>[CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <ARG_LIST>=#
Stack after production rule : [CL_PAR][COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [CL_PAR]

Matched [CL_PAR]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT_LIST>=<STMT><STMT_LIST>
Stack after production rule : <STMT><STMT_LIST>[ENDFUN][COL]$
Input top is : [RET]

Stack : <STMT><STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT>=<RETURN>[COL]
Stack after production rule : <RETURN>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [RET]

Stack : <RETURN>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <RETURN>=[RET]<EXPRESSIONS>
Stack after production rule : [RET]<EXPRESSIONS>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [RET]

Matched [RET]

Stack : <EXPRESSIONS>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <EXPRESSIONS>=<TERM><EXPRESSIONS*>
Stack after production rule : <TERM><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT_LIT]

Stack : <TERM><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <TERM>=<FACTOR><TERM*>
Stack after production rule : <FACTOR><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT_LIT]

Stack : <FACTOR><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <FACTOR>=<VALUE>
Stack after production rule : <VALUE><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT_LIT]

Stack : <VALUE><TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <VALUE>=[INT_LIT]
Stack after production rule : [INT_LIT]<TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [INT_LIT]

Matched [INT_LIT]

Stack : <TERM*><EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <TERM*>=#
Stack after production rule : <EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [COL]

Stack : <EXPRESSIONS*>[COL]<STMT_LIST>[ENDFUN][COL]$
Production rule is : <EXPRESSIONS*>=#
Stack after production rule : [COL]<STMT_LIST>[ENDFUN][COL]$
Input top is : [COL]

Matched [COL]

Stack : <STMT_LIST>[ENDFUN][COL]$
Production rule is : <STMT_LIST>=#
Stack after production rule : [ENDFUN][COL]$
Input top is : [ENDFUN]

Matched [ENDFUN]

Matched [COL]

PARSED
